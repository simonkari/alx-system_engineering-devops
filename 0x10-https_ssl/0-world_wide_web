#!/usr/bin/env bash
# Domain info fetcher
# Fetches information about an array of subdomains.
# Usage: fetch_subdomains domain subdomains
# Example 1: fetch_subdomains google.com mail
# Example 2: fetch_subdomains google.com 'www images maps mail'

fetch_subdomains() {
    local domain="$1"
    local subdomains=()
    readarray -t subdomains <<< "$(echo "$2" | tr ' ' '\n')"
    
    local output_awk='{print "The subdomain", $1, "is a", $7, "record and points to", $8}'
    
    for subdomain in "${subdomains[@]}"; do
        dig "$subdomain.$domain" | awk -F'\t' '/ANSWER SECTION:/ {print $1, $2}' | awk "$output_awk"
    done
}

if [ "${#BASH_ARGV[@]}" -ge '2' ]; then
    fetch_subdomains "$1" "$2"
elif [ "${#BASH_ARGV[@]}" -ge '1' ]; then
    fetch_subdomains "$1" "www lb-01 web-01 web-02"
else
    exit
fi
